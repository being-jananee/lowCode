apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bizBrainz.fullname" . }}
  namespace: {{ include "bizBrainz.namespace" . }}
  labels:
    {{- include "bizBrainz.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "bizBrainz.fullname" . }}
  updateStrategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      {{- include "bizBrainz.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bizBrainz.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      serviceAccountName: {{ template "bizBrainz.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.containerName }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: supervisord
              containerPort: 9001
              protocol: TCP
          startupProbe:
            # The `livenessProbe` and `readinessProbe` will be disabled until the `startupProbe` is successful.
            httpGet:
              path: /
              port: http
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /bizBrainz-stacks
          envFrom:
            - configMapRef:
                name: {{ include "bizBrainz.fullname" . }}
            {{- if .Values.secretName }}
            - secretRef:
                name: {{ .Values.secretName }}
            {{- end }}
      volumes:
  {{- if not .Values.persistence.enabled }}
      - name: data
        emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
        {{- if .Values.persistence.annotations }}
        annotations: {{- include "tplvalues.render" (dict "value" .Values.persistence.annotations "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{ include "storage.class" (dict "persistence" .Values.persistence "global" .Values.global) }}
  {{- end }}
